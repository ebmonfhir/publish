# FHIR GraphQL Schema. Version 4.1.0

type CohortSummary {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  url: uri  _url: ElementBase
  identifier: [Identifier]
  version: String  _version: ElementBase
  title: String  _title: ElementBase
  shortTitle: String  _shortTitle: ElementBase
  subTitle: String  _subTitle: ElementBase
  status: code  _status: ElementBase
  useContext: [UsageContext]
  date: dateTime  _date: ElementBase
  copyright: markdown  _copyright: ElementBase
  approvalDate: date  _approvalDate: ElementBase
  lastReviewDate: date  _lastReviewDate: ElementBase
  contributor: [Contributor]
  relatedArtifact: [RelatedArtifact]
  description: markdown  _description: ElementBase
  note: [Annotation]
  synthesisType: CodeableConcept
  studyType: CodeableConcept
  population: [CohortSummaryPopulation]!
}

type CohortSummaryPopulation {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  description: String  _description: ElementBase
  note: [Annotation]
  intendedCohort: Reference
  actualCohort: Reference
  exposure: [CohortSummaryPopulationExposure]!
}

type CohortSummaryPopulationExposure {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  description: String  _description: ElementBase
  note: [Annotation]
  variableDefinition: Reference!
  measuredVariable: [CohortSummaryPopulationExposureMeasuredVariable]!
}

type CohortSummaryPopulationExposureMeasuredVariable {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  description: String  _description: ElementBase
  note: [Annotation]
  variableDefinition: Reference!
  univariateStatistic: markdown  _univariateStatistic: [ElementBase]
  associationStatistic: [CohortSummaryPopulationExposureMeasuredVariableAssociationStatistic]
}

type CohortSummaryPopulationExposureMeasuredVariableAssociationStatistic {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  description: String  _description: ElementBase
  note: [Annotation]
  coMeasuredVariable: Reference!
  statistic: markdown  _statistic: [ElementBase]
}

input CohortSummaryInput {
  id: ID
  meta: MetaInput
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: NarrativeInput
  contained: [ResourceInput]
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  url: uri  _url: ElementBase
  identifier: [IdentifierInput]
  version: String  _version: ElementBase
  title: String  _title: ElementBase
  shortTitle: String  _shortTitle: ElementBase
  subTitle: String  _subTitle: ElementBase
  status: code  _status: ElementBase
  useContext: [UsageContextInput]
  date: dateTime  _date: ElementBase
  copyright: markdown  _copyright: ElementBase
  approvalDate: date  _approvalDate: ElementBase
  lastReviewDate: date  _lastReviewDate: ElementBase
  contributor: [ContributorInput]
  relatedArtifact: [RelatedArtifactInput]
  description: markdown  _description: ElementBase
  note: [AnnotationInput]
  synthesisType: CodeableConceptInput
  studyType: CodeableConceptInput
  population: [CohortSummaryPopulationInput]!
}

input CohortSummaryPopulationInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  description: String  _description: ElementBase
  note: [AnnotationInput]
  intendedCohort: ReferenceInput
  actualCohort: ReferenceInput
  exposure: [CohortSummaryPopulationExposureInput]!
}

input CohortSummaryPopulationExposureInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  description: String  _description: ElementBase
  note: [AnnotationInput]
  variableDefinition: ReferenceInput!
  measuredVariable: [CohortSummaryPopulationExposureMeasuredVariableInput]!
}

input CohortSummaryPopulationExposureMeasuredVariableInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  description: String  _description: ElementBase
  note: [AnnotationInput]
  variableDefinition: ReferenceInput!
  univariateStatistic: markdown  _univariateStatistic: [ElementBase]
  associationStatistic: [CohortSummaryPopulationExposureMeasuredVariableAssociationStatisticInput]
}

input CohortSummaryPopulationExposureMeasuredVariableAssociationStatisticInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  description: String  _description: ElementBase
  note: [AnnotationInput]
  coMeasuredVariable: ReferenceInput!
  statistic: markdown  _statistic: [ElementBase]
}

type CohortSummaryReadType {
  CohortSummary(id: ID!): CohortSummary
}

type CohortSummaryListType {
  CohortSummaryList(_filter: String
    context: [token]
    context_quantity: [quantity]
    context_type: [token]
    context_type_quantity: [composite]
    context_type_value: [composite]
    date: [date]
    description: [String]
    identifier: [token]
    status: [token]
    title: [String]
    url: [uri]
    version: [token]
    _text: [String]
    _content: [String]
    _id: [token]
    _lastUpdated: [date]
    _profile: [reference]
    _query: [token]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _sort: String
    _count: Int
    _cursor: String): [CohortSummary]
}

type CohortSummaryConnectionType {
  CohortSummaryConection(_filter: String
    context: [token]
    context_quantity: [quantity]
    context_type: [token]
    context_type_quantity: [composite]
    context_type_value: [composite]
    date: [date]
    description: [String]
    identifier: [token]
    status: [token]
    title: [String]
    url: [uri]
    version: [token]
    _text: [String]
    _content: [String]
    _id: [token]
    _lastUpdated: [date]
    _profile: [reference]
    _query: [token]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _sort: String
    _count: Int
    _cursor: String): CohortSummaryConnection
}

type CohortSummaryConnection {
  count: Int
  offset: Int
  pagesize: Int
  first: ID
  previous: ID
  next: ID
  last: ID
  edges: [CohortSummaryEdge]
}

type CohortSummaryEdge {
  mode: String
  score: Float
  resource: CohortSummary
}

type CohortSummaryCreateType {
  CohortSummaryCreate(resource: CohortSummaryInput): CohortSummaryCreation
}

type CohortSummaryCreation {
  location: String
  resource: CohortSummary
  information: OperationOutcome
}

type CohortSummaryUpdateType {
  CohortSummaryUpdate(id: ID, resource: CohortSummaryInput): CohortSummaryUpdate
}

type CohortSummaryUpdate {
  resource: CohortSummary
  information: OperationOutcome
}

type CohortSummaryDeleteType {
  CohortSummaryDelete(id: ID): CohortSummaryDelete
}

type CohortSummaryDelete {
  information: OperationOutcome
}

