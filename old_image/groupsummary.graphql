# FHIR GraphQL Schema. Version 4.1.0

# import the types from 'types.graphql'

type GroupSummary {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  url: uri  _url: ElementBase
  identifier: Identifier
  version: String  _version: ElementBase
  title: String  _title: ElementBase
  shortTitle: String  _shortTitle: ElementBase
  subTitle: String  _subTitle: ElementBase
  status: code  _status: ElementBase
  useContext: [UsageContext]
  date: dateTime  _date: ElementBase
  copyright: markdown  _copyright: ElementBase
  approvalDate: date  _approvalDate: ElementBase
  lastReviewDate: date  _lastReviewDate: ElementBase
  summaryPublisher: [GroupSummarySummaryPublisher]
  contributor: [Contributor]
  relatedArtifact: [RelatedArtifact]
  description: markdown  _description: ElementBase
  note: [Annotation]
  synthesisType: CodeableConcept
  studyType: CodeableConcept
  population: GroupSummaryPopulation!
  variableDefinition: [GroupSummaryVariableDefinition]
  assertions: [Reference]
}

type GroupSummarySummaryPublisher {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  name: String  _name: ElementBase
  contact: [ContactDetail]
}

type GroupSummaryPopulation {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  description: markdown  _description: ElementBase
  note: [Annotation]
  intendedCohort: Reference
  sampleCohort: Reference
  actualCohort: Reference
  sampleSize: [GroupSummaryPopulationSampleSize]
}

type GroupSummaryPopulationSampleSize {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  description: markdown  _description: ElementBase
  note: [Annotation]
  numberOfStudies: Int  _numberOfStudies: ElementBase
  numberOfParticipants: Int  _numberOfParticipants: ElementBase
}

type GroupSummaryVariableDefinition {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  description: markdown  _description: ElementBase
  note: [Annotation]
  variableRole: CodeableConcept
  actualDefinition: Reference!
  intendedDefinition: Reference
}

input GroupSummaryInput {
  id: ID
  meta: MetaInput
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: NarrativeInput
  contained: [ResourceInput]
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  url: uri  _url: ElementBase
  identifier: IdentifierInput
  version: String  _version: ElementBase
  title: String  _title: ElementBase
  shortTitle: String  _shortTitle: ElementBase
  subTitle: String  _subTitle: ElementBase
  status: code  _status: ElementBase
  useContext: [UsageContextInput]
  date: dateTime  _date: ElementBase
  copyright: markdown  _copyright: ElementBase
  approvalDate: date  _approvalDate: ElementBase
  lastReviewDate: date  _lastReviewDate: ElementBase
  summaryPublisher: [GroupSummarySummaryPublisherInput]
  contributor: [ContributorInput]
  relatedArtifact: [RelatedArtifactInput]
  description: markdown  _description: ElementBase
  note: [AnnotationInput]
  synthesisType: CodeableConceptInput
  studyType: CodeableConceptInput
  population: GroupSummaryPopulationInput!
  variableDefinition: [GroupSummaryVariableDefinitionInput]
  assertions: [ReferenceInput]
}

input GroupSummarySummaryPublisherInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  name: String  _name: ElementBase
  contact: [ContactDetailInput]
}

input GroupSummaryPopulationInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  description: markdown  _description: ElementBase
  note: [AnnotationInput]
  intendedCohort: ReferenceInput
  sampleCohort: ReferenceInput
  actualCohort: ReferenceInput
  sampleSize: [GroupSummaryPopulationSampleSizeInput]
}

input GroupSummaryPopulationSampleSizeInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  description: markdown  _description: ElementBase
  note: [AnnotationInput]
  numberOfStudies: Int  _numberOfStudies: ElementBase
  numberOfParticipants: Int  _numberOfParticipants: ElementBase
}

input GroupSummaryVariableDefinitionInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  description: markdown  _description: ElementBase
  note: [AnnotationInput]
  variableRole: CodeableConceptInput
  actualDefinition: ReferenceInput!
  intendedDefinition: ReferenceInput
}

type GroupSummaryReadType {
  GroupSummary(id: ID!): GroupSummary
}

type GroupSummaryListType {
  GroupSummaryList(_filter: String
    context: [token]
    context_quantity: [quantity]
    context_type: [token]
    context_type_quantity: [composite]
    context_type_value: [composite]
    date: [date]
    description: [String]
    identifier: [token]
    status: [token]
    title: [String]
    url: [uri]
    version: [token]
    _text: [String]
    _content: [String]
    _id: [token]
    _lastUpdated: [date]
    _profile: [reference]
    _query: [token]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _sort: String
    _count: Int
    _cursor: String): [GroupSummary]
}

type GroupSummaryConnectionType {
  GroupSummaryConection(_filter: String
    context: [token]
    context_quantity: [quantity]
    context_type: [token]
    context_type_quantity: [composite]
    context_type_value: [composite]
    date: [date]
    description: [String]
    identifier: [token]
    status: [token]
    title: [String]
    url: [uri]
    version: [token]
    _text: [String]
    _content: [String]
    _id: [token]
    _lastUpdated: [date]
    _profile: [reference]
    _query: [token]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _sort: String
    _count: Int
    _cursor: String): GroupSummaryConnection
}

type GroupSummaryConnection {
  count: Int
  offset: Int
  pagesize: Int
  first: ID
  previous: ID
  next: ID
  last: ID
  edges: [GroupSummaryEdge]
}

type GroupSummaryEdge {
  mode: String
  score: Float
  resource: GroupSummary
}

type GroupSummaryCreateType {
  GroupSummaryCreate(resource: GroupSummaryInput): GroupSummaryCreation
}

type GroupSummaryCreation {
  location: String
  resource: GroupSummary
  information: OperationOutcome
}

type GroupSummaryUpdateType {
  GroupSummaryUpdate(id: ID, resource: GroupSummaryInput): GroupSummaryUpdate
}

type GroupSummaryUpdate {
  resource: GroupSummary
  information: OperationOutcome
}

type GroupSummaryDeleteType {
  GroupSummaryDelete(id: ID): GroupSummaryDelete
}

type GroupSummaryDelete {
  information: OperationOutcome
}

