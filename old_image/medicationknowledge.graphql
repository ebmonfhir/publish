# FHIR GraphQL Schema. Version 4.1.0

# import the types from 'types.graphql'

type MedicationKnowledge {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  code: CodeableConcept
  status: code  _status: ElementBase
  manufacturer: Reference
  doseForm: CodeableConcept
  amount: Quantity
  synonym: String  _synonym: [ElementBase]
  relatedMedicationKnowledge: [MedicationKnowledgeRelatedMedicationKnowledge]
  associatedMedication: [Reference]
  productType: [CodeableConcept]
  monograph: [MedicationKnowledgeMonograph]
  ingredient: [MedicationKnowledgeIngredient]
  device: [Reference]
  preparationInstruction: markdown  _preparationInstruction: ElementBase
  intendedRoute: [CodeableConcept]
  cost: [MedicationKnowledgeCost]
  monitoringProgram: [MedicationKnowledgeMonitoringProgram]
  administrationGuideline: [MedicationKnowledgeAdministrationGuideline]
  medicineClassification: [MedicationKnowledgeMedicineClassification]
  packaging: MedicationKnowledgePackaging
  drugCharacteristic: [MedicationKnowledgeDrugCharacteristic]
  clinicalUseIssue: [Reference]
  regulatory: [MedicationKnowledgeRegulatory]
  kineticCharacteristic: [MedicationKnowledgeKineticCharacteristic]
}

type MedicationKnowledgeRelatedMedicationKnowledge {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  type: CodeableConcept!
  reference: [Reference]!
}

type MedicationKnowledgeMonograph {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  type: CodeableConcept
  source: Reference
}

type MedicationKnowledgeIngredient {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  itemCodeableConcept: CodeableConcept
  itemReference: Reference
  isActive: Boolean  _isActive: ElementBase
  strength: Ratio
}

type MedicationKnowledgeCost {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  type: CodeableConcept!
  source: String  _source: ElementBase
  cost: Money!
}

type MedicationKnowledgeMonitoringProgram {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  type: CodeableConcept
  name: String  _name: ElementBase
}

type MedicationKnowledgeAdministrationGuideline {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  dosage: [MedicationKnowledgeAdministrationGuidelineDosage]
  indicationCodeableConcept: CodeableConcept
  indicationReference: Reference
  patientCharacteristic: [MedicationKnowledgeAdministrationGuidelinePatientCharacteristic]
}

type MedicationKnowledgeAdministrationGuidelineDosage {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  type: CodeableConcept!
  dosage: [Dosage]!
}

type MedicationKnowledgeAdministrationGuidelinePatientCharacteristic {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  characteristicCodeableConcept: CodeableConcept
  characteristicQuantity: Quantity
  value: String  _value: [ElementBase]
}

type MedicationKnowledgeMedicineClassification {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  type: CodeableConcept!
  classification: [CodeableConcept]
}

type MedicationKnowledgePackaging {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  type: CodeableConcept
  quantity: Quantity
  device: Reference
  material: CodeableConcept
  packaging: [MedicationKnowledgePackaging]
}

type MedicationKnowledgeDrugCharacteristic {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  type: CodeableConcept
  valueCodeableConcept: CodeableConcept
  valueString: String  _valueString: ElementBase
  valueQuantity: Quantity
  valueBase64Binary: base64Binary  _valueBase64Binary: ElementBase
}

type MedicationKnowledgeRegulatory {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  regulatoryAuthority: Reference!
  substitution: [MedicationKnowledgeRegulatorySubstitution]
  schedule: [MedicationKnowledgeRegulatorySchedule]
  maxDispense: MedicationKnowledgeRegulatoryMaxDispense
}

type MedicationKnowledgeRegulatorySubstitution {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  type: CodeableConcept!
  allowed: Boolean  _allowed: ElementBase
}

type MedicationKnowledgeRegulatorySchedule {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  schedule: CodeableConcept!
}

type MedicationKnowledgeRegulatoryMaxDispense {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  quantity: Quantity!
  period: Duration
}

type MedicationKnowledgeKineticCharacteristic {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  type: CodeableConcept
  valueQuantity: Quantity
  valueDuration: Duration
}

input MedicationKnowledgeInput {
  id: ID
  meta: MetaInput
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: NarrativeInput
  contained: [ResourceInput]
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  identifier: [IdentifierInput]
  code: CodeableConceptInput
  status: code  _status: ElementBase
  manufacturer: ReferenceInput
  doseForm: CodeableConceptInput
  amount: QuantityInput
  synonym: String  _synonym: [ElementBase]
  relatedMedicationKnowledge: [MedicationKnowledgeRelatedMedicationKnowledgeInput]
  associatedMedication: [ReferenceInput]
  productType: [CodeableConceptInput]
  monograph: [MedicationKnowledgeMonographInput]
  ingredient: [MedicationKnowledgeIngredientInput]
  device: [ReferenceInput]
  preparationInstruction: markdown  _preparationInstruction: ElementBase
  intendedRoute: [CodeableConceptInput]
  cost: [MedicationKnowledgeCostInput]
  monitoringProgram: [MedicationKnowledgeMonitoringProgramInput]
  administrationGuideline: [MedicationKnowledgeAdministrationGuidelineInput]
  medicineClassification: [MedicationKnowledgeMedicineClassificationInput]
  packaging: MedicationKnowledgePackagingInput
  drugCharacteristic: [MedicationKnowledgeDrugCharacteristicInput]
  clinicalUseIssue: [ReferenceInput]
  regulatory: [MedicationKnowledgeRegulatoryInput]
  kineticCharacteristic: [MedicationKnowledgeKineticCharacteristicInput]
}

input MedicationKnowledgeRelatedMedicationKnowledgeInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  type: CodeableConceptInput!
  reference: [ReferenceInput]!
}

input MedicationKnowledgeMonographInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  type: CodeableConceptInput
  source: ReferenceInput
}

input MedicationKnowledgeIngredientInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  itemCodeableConcept: CodeableConceptInput
  itemReference: ReferenceInput
  isActive: Boolean  _isActive: ElementBase
  strength: RatioInput
}

input MedicationKnowledgeCostInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  type: CodeableConceptInput!
  source: String  _source: ElementBase
  cost: MoneyInput!
}

input MedicationKnowledgeMonitoringProgramInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  type: CodeableConceptInput
  name: String  _name: ElementBase
}

input MedicationKnowledgeAdministrationGuidelineInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  dosage: [MedicationKnowledgeAdministrationGuidelineDosageInput]
  indicationCodeableConcept: CodeableConceptInput
  indicationReference: ReferenceInput
  patientCharacteristic: [MedicationKnowledgeAdministrationGuidelinePatientCharacteristicInput]
}

input MedicationKnowledgeAdministrationGuidelineDosageInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  type: CodeableConceptInput!
  dosage: [DosageInput]!
}

input MedicationKnowledgeAdministrationGuidelinePatientCharacteristicInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  characteristicCodeableConcept: CodeableConceptInput
  characteristicQuantity: QuantityInput
  value: String  _value: [ElementBase]
}

input MedicationKnowledgeMedicineClassificationInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  type: CodeableConceptInput!
  classification: [CodeableConceptInput]
}

input MedicationKnowledgePackagingInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  type: CodeableConceptInput
  quantity: QuantityInput
  device: ReferenceInput
  material: CodeableConceptInput
  packaging: [MedicationKnowledgePackaging]
}

input MedicationKnowledgeDrugCharacteristicInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  type: CodeableConceptInput
  valueCodeableConcept: CodeableConceptInput
  valueString: String  _valueString: ElementBase
  valueQuantity: QuantityInput
  valueBase64Binary: base64Binary  _valueBase64Binary: ElementBase
}

input MedicationKnowledgeRegulatoryInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  regulatoryAuthority: ReferenceInput!
  substitution: [MedicationKnowledgeRegulatorySubstitutionInput]
  schedule: [MedicationKnowledgeRegulatoryScheduleInput]
  maxDispense: MedicationKnowledgeRegulatoryMaxDispenseInput
}

input MedicationKnowledgeRegulatorySubstitutionInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  type: CodeableConceptInput!
  allowed: Boolean  _allowed: ElementBase
}

input MedicationKnowledgeRegulatoryScheduleInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  schedule: CodeableConceptInput!
}

input MedicationKnowledgeRegulatoryMaxDispenseInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  quantity: QuantityInput!
  period: DurationInput
}

input MedicationKnowledgeKineticCharacteristicInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  type: CodeableConceptInput
  valueQuantity: QuantityInput
  valueDuration: DurationInput
}

type MedicationKnowledgeReadType {
  MedicationKnowledge(id: ID!): MedicationKnowledge
}

type MedicationKnowledgeListType {
  MedicationKnowledgeList(_filter: String
    classification: [token]
    classification_type: [token]
    code: [token]
    doseform: [token]
    identifier: [token]
    ingredient: [reference]
    ingredient_code: [token]
    manufacturer: [reference]
    monitoring_program_name: [token]
    monitoring_program_type: [token]
    monograph: [reference]
    monograph_type: [token]
    product_type: [token]
    source_cost: [token]
    status: [token]
    _text: [String]
    _content: [String]
    _id: [token]
    _lastUpdated: [date]
    _profile: [reference]
    _query: [token]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _sort: String
    _count: Int
    _cursor: String): [MedicationKnowledge]
}

type MedicationKnowledgeConnectionType {
  MedicationKnowledgeConection(_filter: String
    classification: [token]
    classification_type: [token]
    code: [token]
    doseform: [token]
    identifier: [token]
    ingredient: [reference]
    ingredient_code: [token]
    manufacturer: [reference]
    monitoring_program_name: [token]
    monitoring_program_type: [token]
    monograph: [reference]
    monograph_type: [token]
    product_type: [token]
    source_cost: [token]
    status: [token]
    _text: [String]
    _content: [String]
    _id: [token]
    _lastUpdated: [date]
    _profile: [reference]
    _query: [token]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _sort: String
    _count: Int
    _cursor: String): MedicationKnowledgeConnection
}

type MedicationKnowledgeConnection {
  count: Int
  offset: Int
  pagesize: Int
  first: ID
  previous: ID
  next: ID
  last: ID
  edges: [MedicationKnowledgeEdge]
}

type MedicationKnowledgeEdge {
  mode: String
  score: Float
  resource: MedicationKnowledge
}

type MedicationKnowledgeCreateType {
  MedicationKnowledgeCreate(resource: MedicationKnowledgeInput): MedicationKnowledgeCreation
}

type MedicationKnowledgeCreation {
  location: String
  resource: MedicationKnowledge
  information: OperationOutcome
}

type MedicationKnowledgeUpdateType {
  MedicationKnowledgeUpdate(id: ID, resource: MedicationKnowledgeInput): MedicationKnowledgeUpdate
}

type MedicationKnowledgeUpdate {
  resource: MedicationKnowledge
  information: OperationOutcome
}

type MedicationKnowledgeDeleteType {
  MedicationKnowledgeDelete(id: ID): MedicationKnowledgeDelete
}

type MedicationKnowledgeDelete {
  information: OperationOutcome
}

