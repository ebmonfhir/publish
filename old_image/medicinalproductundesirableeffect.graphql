# FHIR GraphQL Schema. Version 4.1.0

type MedicinalProductUndesirableEffect {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  subject: [Reference]
  symptomConditionEffect: CodeableConcept
  classification: CodeableConcept
  frequencyOfOccurrence: CodeableConcept
  population: [Population]
}

input MedicinalProductUndesirableEffectInput {
  id: ID
  meta: MetaInput
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: NarrativeInput
  contained: [ResourceInput]
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  subject: [ReferenceInput]
  symptomConditionEffect: CodeableConceptInput
  classification: CodeableConceptInput
  frequencyOfOccurrence: CodeableConceptInput
  population: [PopulationInput]
}

type MedicinalProductUndesirableEffectReadType {
  MedicinalProductUndesirableEffect(id: ID!): MedicinalProductUndesirableEffect
}

type MedicinalProductUndesirableEffectListType {
  MedicinalProductUndesirableEffectList(_filter: String
    subject: [reference]
    _text: [String]
    _content: [String]
    _id: [token]
    _lastUpdated: [date]
    _profile: [reference]
    _query: [token]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _sort: String
    _count: Int
    _cursor: String): [MedicinalProductUndesirableEffect]
}

type MedicinalProductUndesirableEffectConnectionType {
  MedicinalProductUndesirableEffectConection(_filter: String
    subject: [reference]
    _text: [String]
    _content: [String]
    _id: [token]
    _lastUpdated: [date]
    _profile: [reference]
    _query: [token]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _sort: String
    _count: Int
    _cursor: String): MedicinalProductUndesirableEffectConnection
}

type MedicinalProductUndesirableEffectConnection {
  count: Int
  offset: Int
  pagesize: Int
  first: ID
  previous: ID
  next: ID
  last: ID
  edges: [MedicinalProductUndesirableEffectEdge]
}

type MedicinalProductUndesirableEffectEdge {
  mode: String
  score: Float
  resource: MedicinalProductUndesirableEffect
}

type MedicinalProductUndesirableEffectCreateType {
  MedicinalProductUndesirableEffectCreate(resource: MedicinalProductUndesirableEffectInput): MedicinalProductUndesirableEffectCreation
}

type MedicinalProductUndesirableEffectCreation {
  location: String
  resource: MedicinalProductUndesirableEffect
  information: OperationOutcome
}

type MedicinalProductUndesirableEffectUpdateType {
  MedicinalProductUndesirableEffectUpdate(id: ID, resource: MedicinalProductUndesirableEffectInput): MedicinalProductUndesirableEffectUpdate
}

type MedicinalProductUndesirableEffectUpdate {
  resource: MedicinalProductUndesirableEffect
  information: OperationOutcome
}

type MedicinalProductUndesirableEffectDeleteType {
  MedicinalProductUndesirableEffectDelete(id: ID): MedicinalProductUndesirableEffectDelete
}

type MedicinalProductUndesirableEffectDelete {
  information: OperationOutcome
}

