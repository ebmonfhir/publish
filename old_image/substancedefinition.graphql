# FHIR GraphQL Schema. Version 4.1.0

type SubstanceDefinition {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: Identifier
  type: CodeableConcept
  status: CodeableConcept
  domain: CodeableConcept
  description: String  _description: ElementBase
  source: [Reference]
  comment: String  _comment: ElementBase
  moiety: [SubstanceDefinitionMoiety]
  property: [SubstanceDefinitionProperty]
  referenceInformation: Reference
  structure: SubstanceDefinitionStructure
  code: [SubstanceDefinitionCode]
  name: [SubstanceDefinitionName]
  molecularWeight: [SubstanceDefinitionStructureIsotopeMolecularWeight]
  relationship: [SubstanceDefinitionRelationship]
  nucleicAcid: Reference
  polymer: Reference
  protein: Reference
  sourceMaterial: Reference
}

type SubstanceDefinitionMoiety {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  role: CodeableConcept
  identifier: Identifier
  name: String  _name: ElementBase
  stereochemistry: CodeableConcept
  opticalActivity: CodeableConcept
  molecularFormula: String  _molecularFormula: ElementBase
  amountQuantity: Quantity
  amountString: String  _amountString: ElementBase
}

type SubstanceDefinitionProperty {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  category: CodeableConcept
  code: CodeableConcept
  parameters: String  _parameters: ElementBase
  definingSubstanceReference: Reference
  definingSubstanceCodeableConcept: CodeableConcept
  amountQuantity: Quantity
  amountString: String  _amountString: ElementBase
}

type SubstanceDefinitionStructure {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  stereochemistry: CodeableConcept
  opticalActivity: CodeableConcept
  molecularFormula: String  _molecularFormula: ElementBase
  molecularFormulaByMoiety: String  _molecularFormulaByMoiety: ElementBase
  isotope: [SubstanceDefinitionStructureIsotope]
  molecularWeight: SubstanceDefinitionStructureIsotopeMolecularWeight
  source: [Reference]
  representation: [SubstanceDefinitionStructureRepresentation]
}

type SubstanceDefinitionStructureIsotope {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: Identifier
  name: CodeableConcept
  substitution: CodeableConcept
  halfLife: Quantity
  molecularWeight: SubstanceDefinitionStructureIsotopeMolecularWeight
}

type SubstanceDefinitionStructureIsotopeMolecularWeight {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  method: CodeableConcept
  type: CodeableConcept
  amount: Quantity
}

type SubstanceDefinitionStructureRepresentation {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  type: CodeableConcept
  representation: String  _representation: ElementBase
  attachment: Attachment
}

type SubstanceDefinitionCode {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  code: CodeableConcept
  status: CodeableConcept
  statusDate: dateTime  _statusDate: ElementBase
  comment: String  _comment: ElementBase
  source: [Reference]
}

type SubstanceDefinitionName {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  name: String  _name: ElementBase
  type: CodeableConcept
  status: CodeableConcept
  preferred: Boolean  _preferred: ElementBase
  language: [CodeableConcept]
  domain: [CodeableConcept]
  jurisdiction: [CodeableConcept]
  synonym: [SubstanceDefinitionName]
  translation: [SubstanceDefinitionName]
  official: [SubstanceDefinitionNameOfficial]
  source: [Reference]
}

type SubstanceDefinitionNameOfficial {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  authority: CodeableConcept
  status: CodeableConcept
  date: dateTime  _date: ElementBase
}

type SubstanceDefinitionRelationship {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  substanceReference: Reference
  substanceCodeableConcept: CodeableConcept
  relationship: CodeableConcept
  isDefining: Boolean  _isDefining: ElementBase
  amountQuantity: Quantity
  amountRange: Range
  amountRatio: Ratio
  amountString: String  _amountString: ElementBase
  amountRatioLowLimit: Ratio
  amountType: CodeableConcept
  source: [Reference]
}

input SubstanceDefinitionInput {
  id: ID
  meta: MetaInput
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: NarrativeInput
  contained: [ResourceInput]
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  identifier: IdentifierInput
  type: CodeableConceptInput
  status: CodeableConceptInput
  domain: CodeableConceptInput
  description: String  _description: ElementBase
  source: [ReferenceInput]
  comment: String  _comment: ElementBase
  moiety: [SubstanceDefinitionMoietyInput]
  property: [SubstanceDefinitionPropertyInput]
  referenceInformation: ReferenceInput
  structure: SubstanceDefinitionStructureInput
  code: [SubstanceDefinitionCodeInput]
  name: [SubstanceDefinitionNameInput]
  molecularWeight: [SubstanceDefinitionStructureIsotopeMolecularWeight]
  relationship: [SubstanceDefinitionRelationshipInput]
  nucleicAcid: ReferenceInput
  polymer: ReferenceInput
  protein: ReferenceInput
  sourceMaterial: ReferenceInput
}

input SubstanceDefinitionMoietyInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  role: CodeableConceptInput
  identifier: IdentifierInput
  name: String  _name: ElementBase
  stereochemistry: CodeableConceptInput
  opticalActivity: CodeableConceptInput
  molecularFormula: String  _molecularFormula: ElementBase
  amountQuantity: QuantityInput
  amountString: String  _amountString: ElementBase
}

input SubstanceDefinitionPropertyInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  category: CodeableConceptInput
  code: CodeableConceptInput
  parameters: String  _parameters: ElementBase
  definingSubstanceReference: ReferenceInput
  definingSubstanceCodeableConcept: CodeableConceptInput
  amountQuantity: QuantityInput
  amountString: String  _amountString: ElementBase
}

input SubstanceDefinitionStructureInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  stereochemistry: CodeableConceptInput
  opticalActivity: CodeableConceptInput
  molecularFormula: String  _molecularFormula: ElementBase
  molecularFormulaByMoiety: String  _molecularFormulaByMoiety: ElementBase
  isotope: [SubstanceDefinitionStructureIsotopeInput]
  molecularWeight: SubstanceDefinitionStructureIsotopeMolecularWeight
  source: [ReferenceInput]
  representation: [SubstanceDefinitionStructureRepresentationInput]
}

input SubstanceDefinitionStructureIsotopeInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  identifier: IdentifierInput
  name: CodeableConceptInput
  substitution: CodeableConceptInput
  halfLife: QuantityInput
  molecularWeight: SubstanceDefinitionStructureIsotopeMolecularWeightInput
}

input SubstanceDefinitionStructureIsotopeMolecularWeightInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  method: CodeableConceptInput
  type: CodeableConceptInput
  amount: QuantityInput
}

input SubstanceDefinitionStructureRepresentationInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  type: CodeableConceptInput
  representation: String  _representation: ElementBase
  attachment: AttachmentInput
}

input SubstanceDefinitionCodeInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  code: CodeableConceptInput
  status: CodeableConceptInput
  statusDate: dateTime  _statusDate: ElementBase
  comment: String  _comment: ElementBase
  source: [ReferenceInput]
}

input SubstanceDefinitionNameInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  name: String  _name: ElementBase
  type: CodeableConceptInput
  status: CodeableConceptInput
  preferred: Boolean  _preferred: ElementBase
  language: [CodeableConceptInput]
  domain: [CodeableConceptInput]
  jurisdiction: [CodeableConceptInput]
  synonym: [SubstanceDefinitionName]
  translation: [SubstanceDefinitionName]
  official: [SubstanceDefinitionNameOfficialInput]
  source: [ReferenceInput]
}

input SubstanceDefinitionNameOfficialInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  authority: CodeableConceptInput
  status: CodeableConceptInput
  date: dateTime  _date: ElementBase
}

input SubstanceDefinitionRelationshipInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  substanceReference: ReferenceInput
  substanceCodeableConcept: CodeableConceptInput
  relationship: CodeableConceptInput
  isDefining: Boolean  _isDefining: ElementBase
  amountQuantity: QuantityInput
  amountRange: RangeInput
  amountRatio: RatioInput
  amountString: String  _amountString: ElementBase
  amountRatioLowLimit: RatioInput
  amountType: CodeableConceptInput
  source: [ReferenceInput]
}

type SubstanceDefinitionReadType {
  SubstanceDefinition(id: ID!): SubstanceDefinition
}

type SubstanceDefinitionListType {
  SubstanceDefinitionList(_filter: String
    code: [token]
    _text: [String]
    _content: [String]
    _id: [token]
    _lastUpdated: [date]
    _profile: [reference]
    _query: [token]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _sort: String
    _count: Int
    _cursor: String): [SubstanceDefinition]
}

type SubstanceDefinitionConnectionType {
  SubstanceDefinitionConection(_filter: String
    code: [token]
    _text: [String]
    _content: [String]
    _id: [token]
    _lastUpdated: [date]
    _profile: [reference]
    _query: [token]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _sort: String
    _count: Int
    _cursor: String): SubstanceDefinitionConnection
}

type SubstanceDefinitionConnection {
  count: Int
  offset: Int
  pagesize: Int
  first: ID
  previous: ID
  next: ID
  last: ID
  edges: [SubstanceDefinitionEdge]
}

type SubstanceDefinitionEdge {
  mode: String
  score: Float
  resource: SubstanceDefinition
}

type SubstanceDefinitionCreateType {
  SubstanceDefinitionCreate(resource: SubstanceDefinitionInput): SubstanceDefinitionCreation
}

type SubstanceDefinitionCreation {
  location: String
  resource: SubstanceDefinition
  information: OperationOutcome
}

type SubstanceDefinitionUpdateType {
  SubstanceDefinitionUpdate(id: ID, resource: SubstanceDefinitionInput): SubstanceDefinitionUpdate
}

type SubstanceDefinitionUpdate {
  resource: SubstanceDefinition
  information: OperationOutcome
}

type SubstanceDefinitionDeleteType {
  SubstanceDefinitionDelete(id: ID): SubstanceDefinitionDelete
}

type SubstanceDefinitionDelete {
  information: OperationOutcome
}

