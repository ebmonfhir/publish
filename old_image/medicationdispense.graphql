# FHIR GraphQL Schema. Version 4.1.0

type MedicationDispense {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  partOf: [Reference]
  status: code  _status: ElementBase
  statusReasonCodeableConcept: CodeableConcept
  statusReasonReference: Reference
  category: [CodeableConcept]
  medicationCodeableConcept: CodeableConcept
  medicationReference: Reference
  subject: Reference
  encounter: Reference
  supportingInformation: [Reference]
  performer: [MedicationDispensePerformer]
  location: Reference
  authorizingPrescription: [Reference]
  type: CodeableConcept
  quantity: Quantity
  daysSupply: Quantity
  whenPrepared: dateTime  _whenPrepared: ElementBase
  whenHandedOver: dateTime  _whenHandedOver: ElementBase
  destination: Reference
  receiver: [Reference]
  note: [Annotation]
  dosageInstruction: [Dosage]
  substitution: MedicationDispenseSubstitution
  detectedIssue: [Reference]
  eventHistory: [Reference]
}

type MedicationDispensePerformer {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  function: CodeableConcept
  actor: Reference!
}

type MedicationDispenseSubstitution {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  wasSubstituted: Boolean  _wasSubstituted: ElementBase
  type: CodeableConcept
  reason: [CodeableConcept]
  responsibleParty: Reference
}

input MedicationDispenseInput {
  id: ID
  meta: MetaInput
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: NarrativeInput
  contained: [ResourceInput]
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  identifier: [IdentifierInput]
  partOf: [ReferenceInput]
  status: code  _status: ElementBase
  statusReasonCodeableConcept: CodeableConceptInput
  statusReasonReference: ReferenceInput
  category: [CodeableConceptInput]
  medicationCodeableConcept: CodeableConceptInput
  medicationReference: ReferenceInput
  subject: ReferenceInput
  encounter: ReferenceInput
  supportingInformation: [ReferenceInput]
  performer: [MedicationDispensePerformerInput]
  location: ReferenceInput
  authorizingPrescription: [ReferenceInput]
  type: CodeableConceptInput
  quantity: QuantityInput
  daysSupply: QuantityInput
  whenPrepared: dateTime  _whenPrepared: ElementBase
  whenHandedOver: dateTime  _whenHandedOver: ElementBase
  destination: ReferenceInput
  receiver: [ReferenceInput]
  note: [AnnotationInput]
  dosageInstruction: [DosageInput]
  substitution: MedicationDispenseSubstitutionInput
  detectedIssue: [ReferenceInput]
  eventHistory: [ReferenceInput]
}

input MedicationDispensePerformerInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  function: CodeableConceptInput
  actor: ReferenceInput!
}

input MedicationDispenseSubstitutionInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  wasSubstituted: Boolean  _wasSubstituted: ElementBase
  type: CodeableConceptInput
  reason: [CodeableConceptInput]
  responsibleParty: ReferenceInput
}

type MedicationDispenseReadType {
  MedicationDispense(id: ID!): MedicationDispense
}

type MedicationDispenseListType {
  MedicationDispenseList(_filter: String
    code: [token]
    destination: [reference]
    encounter: [reference]
    identifier: [token]
    medication: [reference]
    patient: [reference]
    performer: [reference]
    prescription: [reference]
    receiver: [reference]
    responsibleparty: [reference]
    status: [token]
    subject: [reference]
    type: [token]
    whenhandedover: [date]
    whenprepared: [date]
    _text: [String]
    _content: [String]
    _id: [token]
    _lastUpdated: [date]
    _profile: [reference]
    _query: [token]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _sort: String
    _count: Int
    _cursor: String): [MedicationDispense]
}

type MedicationDispenseConnectionType {
  MedicationDispenseConection(_filter: String
    code: [token]
    destination: [reference]
    encounter: [reference]
    identifier: [token]
    medication: [reference]
    patient: [reference]
    performer: [reference]
    prescription: [reference]
    receiver: [reference]
    responsibleparty: [reference]
    status: [token]
    subject: [reference]
    type: [token]
    whenhandedover: [date]
    whenprepared: [date]
    _text: [String]
    _content: [String]
    _id: [token]
    _lastUpdated: [date]
    _profile: [reference]
    _query: [token]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _sort: String
    _count: Int
    _cursor: String): MedicationDispenseConnection
}

type MedicationDispenseConnection {
  count: Int
  offset: Int
  pagesize: Int
  first: ID
  previous: ID
  next: ID
  last: ID
  edges: [MedicationDispenseEdge]
}

type MedicationDispenseEdge {
  mode: String
  score: Float
  resource: MedicationDispense
}

type MedicationDispenseCreateType {
  MedicationDispenseCreate(resource: MedicationDispenseInput): MedicationDispenseCreation
}

type MedicationDispenseCreation {
  location: String
  resource: MedicationDispense
  information: OperationOutcome
}

type MedicationDispenseUpdateType {
  MedicationDispenseUpdate(id: ID, resource: MedicationDispenseInput): MedicationDispenseUpdate
}

type MedicationDispenseUpdate {
  resource: MedicationDispense
  information: OperationOutcome
}

type MedicationDispenseDeleteType {
  MedicationDispenseDelete(id: ID): MedicationDispenseDelete
}

type MedicationDispenseDelete {
  information: OperationOutcome
}

